{"version":3,"sources":["fastpl.js"],"names":["_logical_","val","escapeHash","<",">","&","\"","'","/","_cache","escapeFn","s","_escape_","html","replace","isArray","Array","obj","toString","call","_each_","data","min","max","callback","i","len","count","o","t","length","n","fasTpl","tpl","tplObj","_parse","undefined","render","tools","name","fn","getTools","tags","langOpen","langClose","varOpen","varClose","commentOpen","commentClose","version","uid","statement","var","args","if","else if","else","/if","for","params","isNum","str","arg","tempArr","split","test","/for","log","_compile","strTpl","concat","list","headerCode","view","reg","literalReg","operationReg","variableReg","commentReg","literalPattern","RegExp","operationPattern","variablePattern","commentPattern","footerCode","all","literalVar","type","tag","escape","value","symbol","indexOf","param","code","dataCode","this","_tpl","viewFn","Function","e","eval","define","exports","module","window"],"mappings":"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","file":"fastpl.min.js","sourcesContent":["/**\r\n * @file js template\r\n * @author xucaiyu\r\n * @email 569455187@qq.com\r\n * @version 4.0\r\n * @date 2015-10-09\r\n * @license MIT License \r\n */\r\n(function() {\r\n    var escapeHash = {\r\n            '<': '&lt;',\r\n            '>': '&gt;',\r\n            '&': '&amp;',\r\n            '\"': '&quot;',\r\n            \"'\": '&#x27;',\r\n            '/': '&#x2f;'\r\n        },\r\n        _cache = {};\r\n\r\n    var escapeFn = function (s) {\r\n        return escapeHash[s];\r\n    };\r\n\r\n    // 转义\r\n    var _escape_ = function( html ){\r\n\r\n        if(typeof html !== 'string') return html;\r\n\r\n        return html.replace( /[&<>\"'/]/igm, escapeFn );\r\n    };\r\n\r\n    // 是否数组\r\n    var isArray = Array.isArray || function (obj) {\r\n        return ({}).toString.call(obj) === '[object Array]';\r\n    };\r\n\r\n    // each 循环\r\n    var _each_ = function (data, min, max, callback) {\r\n        var i, len;\r\n\r\n        if (isArray(data)) {\r\n            i = min;\r\n            len = max;\r\n            for (; i < len; i++) {\r\n                callback.call(data, data[i], i, data);\r\n            }\r\n        } else {\r\n            for (i in data) {\r\n                callback.call(data, data[i], i);\r\n            }\r\n        }\r\n    };\r\n    // 逻辑判断是否存在值\r\n    function _logical_( val ){\r\n        return val;\r\n    }\r\n\r\n    // 获取长度\r\n    var count = function( o ){\r\n        var t = typeof o;\r\n\r\n        if(t === 'string'){\r\n                return o.length;\r\n        }else if(t === 'object'){\r\n                var n = 0;\r\n                for(var i in o){\r\n                        n++;\r\n                }\r\n                return n;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    // fast tpl function\r\n    var fasTpl = function( tpl, data ){\r\n        if(typeof tpl !== 'string') throw('Template not found');\r\n\r\n        var tplObj = fasTpl._parse.call( fasTpl, tpl );\r\n\r\n        return data === undefined ? tplObj : tplObj.render( data );\r\n    };\r\n\r\n    var tools = {\r\n        _escape_: _escape_,\r\n        _each_: _each_,\r\n        _logical_: _logical_,\r\n        count: count\r\n    };\r\n\r\n    fasTpl.tools = function( name, fn ){\r\n        if(typeof name === 'object' ){\r\n            for(var n in name ){\r\n                tools[ n ] = name[ n ];\r\n            }\r\n        }else{\r\n            tools[ name ] = fn;\r\n        }\r\n    };\r\n\r\n    fasTpl.getTools = function(){\r\n        return tools;\r\n    };\r\n\r\n    fasTpl.tags = {\r\n        langOpen: '{{',\r\n        langClose: '}}',\r\n        varOpen: '\\\\${',\r\n        varClose: '}',\r\n        commentOpen: '{!--',\r\n        commentClose: '--}'\r\n    };\r\n\r\n    fasTpl.version = '3.0';\r\n    fasTpl.uid = '1';\r\n    fasTpl.statement = {\r\n        'var': function( args ){\r\n            return 'var ' + args + ';\\r\\n';\r\n        },\r\n        'if': function( args ){\r\n            return 'if(' + args + '){\\r\\n';\r\n        },\r\n        'else if': function( args ){\r\n            return '}else if(' + args + '){\\r\\n';\r\n        },\r\n        'else': function( args ){\r\n            return '}else{\\r\\n';\r\n        },\r\n        '/if': function( args ){\r\n            return '}\\r\\n';\r\n        },\r\n        'for': function( args ){\r\n            var str = '',\r\n                arg = args.replace( /\\s/g, '' ),\r\n                tempArr = arg.split( '(' ),\r\n                obj = tempArr[0],\r\n                val = tempArr[1] ? tempArr[1] : '',\r\n                params, isNum;\r\n\r\n            // 无参数\r\n            if( !args ){\r\n                throw \"{{for}}: is not arguments\";\r\n            }\r\n\r\n            if( val === '' ){\r\n                // 无参数\r\n                str = '_each_('+ obj +',0,'+obj+'.length,function(v, i){';\r\n            }else if( val !== '' ){\r\n                params = val.split( ')' )[0].split( ',' );\r\n                isNum = /\\d+/.test( params[0] ) || /\\d+/.test( params[1] );\r\n\r\n                if( !isNum ){\r\n                    // 参数为字母\r\n                    str = '_each_('+ obj +',0,'+ obj +'.length,function('+params+'){';\r\n                }else{\r\n                    // 参数为数字\r\n                    str = '_each_([],'+ params +',function(data,'+ (obj ? obj : 'i') +'){';\r\n                }\r\n            }else{\r\n                str = 'for'+ arg;\r\n            }\r\n\r\n            return '\\r\\n'+str+'\\r\\n';\r\n        },\r\n        '/for': function( args ){\r\n            return '\\r\\n});\\r\\n';\r\n        },\r\n        'log': function( args ){\r\n            return 'console.log(' +args+ ');\\r\\n';\r\n        }\r\n    };\r\n    \r\n    // 编译成string语法\r\n    fasTpl._compile = function( strTpl ){\r\n        // regexp\r\n        // var reg = '\\\\s*(\\\\/?\\\\w+(?:\\\\s*if)?)\\\\s*(?:([^\\\\'+ fasTpl.tags.langClose +'\\\\(]*)(?:\\\\(([\\\\d\\\\w,]*)\\\\))?)\\\\s*',\r\n        var reg = '\\\\s*(\\\\/?\\\\w+(?:\\\\s*if)?)\\\\s*([^'+ fasTpl.tags.langClose +']*)',\r\n            // 过滤语法的正则\r\n            literalReg = fasTpl.tags.langOpen + 'literal' + fasTpl.tags.langClose + '([\\\\s\\\\S]*)' + fasTpl.tags.langOpen + '/literal' + fasTpl.tags.langClose,\r\n            // 语法操作正则\r\n            operationReg = fasTpl.tags.langOpen + reg + fasTpl.tags.langClose,\r\n            // 变量值正则\r\n            variableReg = fasTpl.tags.varOpen + '([=\\\\s]?)([^\\\\|]+?)\\\\s*(?:(\\\\|+)([\\\\s\\\\S]+?))?' + fasTpl.tags.varClose,\r\n            // 变量值不转义正则\r\n            //escapeReg = fasTpl.tags.escapeOpen + '([\\\\s\\\\S]+?)\\\\s*(?:\\\\|([\\\\s\\\\S]+?))?' + fasTpl.tags.escapeClose,\r\n            // 注释\r\n            commentReg = fasTpl.tags.commentOpen + '[\\\\s\\\\S]*' + fasTpl.tags.commentClose,\r\n            literalPattern = new RegExp(literalReg, 'igm'),\r\n            operationPattern = new RegExp(operationReg, 'igm'),\r\n            variablePattern = new RegExp(variableReg, 'igm'),\r\n            //noneencodePattern = new RegExp(escapeReg, 'igm'),\r\n            commentPattern = new RegExp(commentReg, 'igm'),\r\n            headerCode = 'var _tools_=_tools,\\r\\n_escape_=_tools_._escape_,\\r\\n_each_=_tools_._each_,\\r\\n_logical_=_tools_._logical_,\\r\\n',\r\n            footerCode = '',\r\n            list = {},\r\n            view;\r\n\r\n        // 声明自定义函数\r\n        function concat( name ){\r\n            var val;\r\n            // name不存在或者list中存在name\r\n            if( !name || list[ name ] ) return;\r\n            // 添加name\r\n            val = '_data.' + name;\r\n            headerCode += name + '=' + val + ',\\r\\n';\r\n            list[ name ] = true;\r\n        }\r\n\r\n        // 替换语法\r\n        view = strTpl\r\n            .replace(/[\\r\\t\\n]/g, '')\r\n            // 去掉注释\r\n            .replace( commentPattern, '')\r\n            // 原模板输出\r\n            .replace( literalPattern, function(all, args){\r\n                var literalVar = '_literal_'+ (fasTpl.uid++);\r\n\r\n                // 赋值变量\r\n                headerCode += literalVar + '=\\'' + args + '\\',';\r\n\r\n                return '\\';\\r\\n_str+=' + literalVar + '+\\'';\r\n            })\r\n            .replace( operationPattern, function(all, type, args){\r\n                // console.log(all, type,'---' , args,param);\r\n                // console.log( type, args )\r\n                var tag = fasTpl.statement[ type ];\r\n                if ( !tag ) {\r\n                    throw \"Unknown template tag: \" + type;\r\n                }\r\n                \r\n                // 逻辑\r\n                return '\\'; '+ tag( args )+'_str+=\\'';\r\n            })\r\n            .replace( variablePattern, function(all, escape, value, symbol, args){\r\n                // console.log(all, '--', escape, '--',value, '--', symbol, '--', args);\r\n                if ( !value ) {\r\n                    throw \"Unknown template tag: \" + value;\r\n                }\r\n                \r\n                // || 判断语句\r\n                if( symbol && symbol !== '|' ){\r\n                    // 防止未定义的变量报错\r\n                    if( value.indexOf( '.' ) === -1 ){\r\n                        concat( value );\r\n                    }\r\n\r\n                    value = '_logical_('+ value + symbol + args+')';\r\n                }else if( symbol ){\r\n                    if( args ){\r\n                        var split = args.split(':'),\r\n                            name = split[0].replace(/\\s/g, ''), // 自定义函数名\r\n                            param = split[1] || undefined,      // 参数\r\n                            code;\r\n\r\n                        // 不存在的自定义函数\r\n                        if( !tools[ name ] ){\r\n                            throw \"Unknown template method: \" + name;\r\n                        }\r\n                        // 执行自定义方法\r\n                        value = '_tools_.'+name+'('+ value +','+ param+')';\r\n                        // value = name+'('+ value +','+ param+')'\r\n                        // concat( name );\r\n                    }\r\n                }\r\n                // 转义变量\r\n                if( escape !== '=' ){\r\n                    value = '_escape_(' + value + ')';\r\n                }\r\n               \r\n                return '\\'+'+value+ '+\\'';\r\n            });\r\n            // .replace(/[\\r\\t\\n]/g,'');\r\n\r\n        footerCode = '_str = \\'\\';\\r\\n_str+=\\''+ view +'\\';\\r\\nreturn new String(_str);';\r\n\r\n        return function( data ){\r\n            var dataCode = '', code;\r\n\r\n            // 循环数据keyname，声明成变量,方便直接读取\r\n            // _data.name\r\n            tools._each_(data,0,0, function( value, name ){\r\n                dataCode += name + '=_data.' + name+',\\r\\n';\r\n            });\r\n            // 组合代码\r\n            code = headerCode + dataCode + footerCode;\r\n            code.replace(/\\_str\\+\\=\\'\\'\\;/g, '');\r\n\r\n            return code;\r\n        };\r\n    };\r\n    // 解析成js语法\r\n    fasTpl._parse = function( tpl ){\r\n        var viewFn;\r\n\r\n        // 判断是否已经缓存\r\n        if( _cache[ tpl ] ){\r\n            viewFn = _cache[ tpl ];\r\n        }else{\r\n            // 返回解析但未渲染数据的函数\r\n            viewFn = this._compile(tpl);\r\n            _cache[ tpl ] = viewFn;\r\n        }\r\n        \r\n        // 生成新的渲染函数\r\n        function render(){\r\n            this._tpl = viewFn;\r\n            this.render = function( data ){\r\n                var code;\r\n\r\n                try{\r\n                    // 渲染数据,返回html\r\n                    code = this._tpl( data );\r\n\r\n                    return (new Function( '_data, _tools',  code ))(data, tools).replace(/(^\\s*)|(\\s*$)/g,'');\r\n                    \r\n                }catch (e){\r\n                    if( e.name == 'ReferenceError' ){\r\n                        throw e;\r\n                    }else{\r\n                        // VM输出错误\r\n                        eval( code );\r\n                    }                    \r\n                }\r\n            };\r\n            \r\n        }\r\n\r\n        return new render();\r\n    };\r\n\r\n    typeof define == \"function\" ? define(function() {\r\n        return fasTpl;\r\n    }) : typeof exports != \"undefined\" ? module.exports = fasTpl : window.fasTpl = fasTpl;\r\n    // return new Function( code.replace(/[\\r\\t\\n]/g,'') ).apply(options);\r\n})();"],"sourceRoot":"/source/"}