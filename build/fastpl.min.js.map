{"version":3,"sources":["fastpl.js"],"names":["_logical_","val","escapeHash","<",">","&","\"","'","/","_cache","escapeFn","s","_escape_","html","replace","isArray","Array","obj","toString","call","_each_","data","min","max","callback","i","len","count","o","t","length","n","fasTpl","tpl","tplObj","_parse","undefined","render","tools","name","fn","getTools","tags","langOpen","langClose","varOpen","varClose","commentOpen","commentClose","version","uid","statement","var","args","if","else if","else","/if","for","params","isNum","str","tempArr","split","test","/for","log","_compile","strTpl","concat","list","headerCode","view","reg","literalReg","operationReg","variableReg","commentReg","literalPattern","RegExp","operationPattern","variablePattern","commentPattern","footerCode","all","key","type","tag","escape","value","symbol","indexOf","param","code","dataCode","Function","this","_tpl","viewFn","e","define","exports","module","window"],"mappings":"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","file":"fastpl.min.js","sourcesContent":["/**\r\n * @file js template\r\n * @author xucaiyu\r\n * @email 569455187@qq.com\r\n * @version 4.0\r\n * @date 2015-10-09\r\n * @license MIT License \r\n */\r\n(function() {\r\n    var escapeHash = {\r\n            '<': '&lt;',\r\n            '>': '&gt;',\r\n            '&': '&amp;',\r\n            '\"': '&quot;',\r\n            \"'\": '&#x27;',\r\n            '/': '&#x2f;'\r\n        },\r\n        _cache = {};\r\n\r\n    var escapeFn = function (s) {\r\n        return escapeHash[s];\r\n    };\r\n\r\n    // 转义\r\n    var _escape_ = function( html ){\r\n\r\n        if(typeof html !== 'string') return html;\r\n\r\n        return html.replace( /[&<>\"'/]/igm, escapeFn )\r\n    }\r\n\r\n    // 是否数组\r\n    var isArray = Array.isArray || function (obj) {\r\n        return ({}).toString.call(obj) === '[object Array]';\r\n    };\r\n\r\n    // each 循环\r\n    var _each_ = function (data, min, max, callback) {\r\n        var i, len;\r\n\r\n        // if not min and max\r\n        // if( typeof min === 'function' ){\r\n        //     i = 0;\r\n        //     len = data.length;\r\n        //     callback = min;\r\n        //     min = undefined;\r\n        // }\r\n\r\n        if (isArray(data)) {\r\n            i = min;\r\n            len = max;\r\n            for (; i < len; i++) {\r\n                callback.call(data, data[i], i, data);\r\n            }\r\n        } else {\r\n            for (i in data) {\r\n                callback.call(data, data[i], i);\r\n            }\r\n        }\r\n    };\r\n    // 逻辑判断是否存在值\r\n    function _logical_( val ){\r\n        return val;\r\n    }\r\n\r\n    // 获取长度\r\n    var count = function( o ){\r\n        var t = typeof o;\r\n\r\n        if(t === 'string'){\r\n                return o.length;\r\n        }else if(t === 'object'){\r\n                var n = 0;\r\n                for(var i in o){\r\n                        n++;\r\n                }\r\n                return n;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    // fast tpl function\r\n    var fasTpl = function( tpl, data ){\r\n        if(typeof tpl !== 'string') throw('Template not found');\r\n\r\n        var tplObj = fasTpl._parse.call( fasTpl, tpl );\r\n\r\n        return data === undefined ? tplObj : tplObj.render( data );\r\n    };\r\n\r\n    var tools = {\r\n        _escape_: _escape_,\r\n        _each_: _each_,\r\n        _logical_: _logical_,\r\n        count: count\r\n    }\r\n\r\n    fasTpl.tools = function( name, fn ){\r\n        if(typeof name === 'object' ){\r\n            for(var n in name ){\r\n                tools[ n ] = name[ n ];\r\n            }\r\n        }else{\r\n            tools[ name ] = fn;\r\n        }\r\n    }\r\n\r\n    fasTpl.getTools = function(){\r\n        return tools;\r\n    }\r\n\r\n    fasTpl.tags = {\r\n        langOpen: '{{',\r\n        langClose: '}}',\r\n        varOpen: '\\\\${',\r\n        varClose: '}',\r\n        commentOpen: '<!--',\r\n        commentClose: '-->'\r\n    }\r\n    fasTpl.version = '3.0';\r\n    fasTpl.uid = '1';\r\n    fasTpl.statement = {\r\n        'var': function( args ){\r\n            return 'var ' + args + ';'\r\n        },\r\n        'if': function( args ){\r\n            return 'if(' + args + '){'\r\n        },\r\n        'else if': function( args ){\r\n            return '}else if(' + args + '){'\r\n        },\r\n        'else': function( args ){\r\n            return '}else{'\r\n        },\r\n        '/if': function( args ){\r\n            return '}'\r\n        },\r\n        'for': function( args ){\r\n            var str = '',\r\n                args = args.replace( /\\s/g, '' ),\r\n                tempArr = args.split( '(' ),\r\n                obj = tempArr[0],\r\n                val = tempArr[1] ? tempArr[1] : '',\r\n                params, isNum;\r\n\r\n      // console.log( tempArr );    \r\n            if( val === '' ){\r\n                // 无参数\r\n                str = '_each_('+ obj +',0,'+obj+'.length,function(v, i){'\r\n            }else if( val !== '' ){\r\n                params = val.split( ')' )[0].split( ',' );\r\n                isNum = /\\d+/.test( params[0] ) || /\\d+/.test( params[1] );\r\n\r\n                if( !isNum ){\r\n                    // 参数为字母\r\n                    str = '_each_('+ obj +',0,'+ obj +'.length,function('+params+'){';\r\n                }else{\r\n                    // 参数为数字\r\n                    str = '_each_([],'+ params +',function(data,'+ (obj ? obj : 'i') +'){';\r\n                }\r\n            }else{\r\n                str = 'for'+ args;\r\n            }\r\n\r\n            return str\r\n        },\r\n        '/for': function( args ){\r\n            return '});'\r\n        },\r\n        'log': function( args ){\r\n            return 'console.log(' +args+ ');'\r\n        }\r\n    }\r\n    \r\n    // 编译成string语法\r\n    fasTpl._compile = function( strTpl ){\r\n        // regexp\r\n        // var reg = '\\\\s*(\\\\/?\\\\w+(?:\\\\s*if)?)\\\\s*(?:([^\\\\'+ fasTpl.tags.langClose +'\\\\(]*)(?:\\\\(([\\\\d\\\\w,]*)\\\\))?)\\\\s*',\r\n        var reg = '\\\\s*(\\\\/?\\\\w+(?:\\\\s*if)?)\\\\s*([^'+ fasTpl.tags.langClose +']*)',\r\n            // 过滤正则\r\n            literalReg = fasTpl.tags.langOpen + 'literal' + fasTpl.tags.langClose + '([\\\\s\\\\S]*)' + fasTpl.tags.langOpen + '/literal' + fasTpl.tags.langClose,\r\n            // 语法操作正则\r\n            operationReg = fasTpl.tags.langOpen + reg + fasTpl.tags.langClose,\r\n            // 变量值正则\r\n            variableReg = fasTpl.tags.varOpen + '([=\\\\s]?)([^\\\\|]+?)\\\\s*(?:(\\\\|+)([\\\\s\\\\S]+?))?' + fasTpl.tags.varClose,\r\n            // 变量值不转义正则\r\n            //escapeReg = fasTpl.tags.escapeOpen + '([\\\\s\\\\S]+?)\\\\s*(?:\\\\|([\\\\s\\\\S]+?))?' + fasTpl.tags.escapeClose,\r\n            // 注释\r\n            commentReg = fasTpl.tags.commentOpen + '[\\\\s\\\\S]*' + fasTpl.tags.commentClose,\r\n            literalPattern = new RegExp(literalReg, 'igm'),\r\n            operationPattern = new RegExp(operationReg, 'igm'),\r\n            variablePattern = new RegExp(variableReg, 'igm'),\r\n            //noneencodePattern = new RegExp(escapeReg, 'igm'),\r\n            commentPattern = new RegExp(commentReg, 'igm'),\r\n            headerCode = 'var _escape_=$tools._escape_,_each_=$tools._each_,_logical_=$tools._logical_,',\r\n            footerCode = '',\r\n            list = {},\r\n            view;\r\n\r\n        // 声明自定义函数\r\n        function concat( name ){\r\n            var val;\r\n            // name不存在或者list中存在name\r\n            if( !name || list[ name ] ) return;\r\n            // 添加name\r\n            if( tools[ name ] ){\r\n                val = '$tools.' + name;\r\n            }else{\r\n                val = '_data.' + name;\r\n            }\r\n            headerCode += name + '=' + val + ',';\r\n            list[ name ] = true;\r\n        }\r\n\r\n        // 替换语法\r\n        view = strTpl\r\n            .replace(/[\\r\\t\\n]/g, '')\r\n            // 去掉注释\r\n            .replace( commentPattern, '')\r\n            .replace( literalPattern, function(all, args){\r\n                var key = '_literal_'+ (fasTpl.uid++);\r\n\r\n                headerCode += key + '=\\'' + args + '\\',';\r\n                return '\\';_str+=' + key + '+\\'';\r\n            })\r\n            .replace( operationPattern, function(all, type, args){\r\n                // console.log(all, type,'---' , args,param);\r\n                // console.log( type, args )\r\n                var tag = fasTpl.statement[ type ];\r\n                if ( !tag ) {\r\n                    throw \"Unknown template tag: \" + type;\r\n                }\r\n                \r\n                // 逻辑\r\n                return '\\'; '+ tag( args )+' _str+=\\'';\r\n            })\r\n            .replace( variablePattern, function(all, escape, value, symbol, args){\r\n                // console.log(all, '--', escape, '--',value, '--', symbol, '--', args);\r\n                \r\n                // || 判断语句\r\n                if( symbol && symbol !== '|' ){\r\n                    // 防止未定义的变量报错\r\n                    if( value.indexOf( '.' ) === -1 ){\r\n                        concat( value );\r\n                    }\r\n\r\n                    value = '_logical_('+ value + symbol + args+')';\r\n                }else{\r\n                    if( args ){\r\n                        var split = args.split(':'),\r\n                            name = split[0].replace(/\\s/g, ''),\r\n                            param = split[1] || undefined,\r\n                            code;\r\n\r\n                        // 执行自定义方法\r\n                        value = name+'('+ value +','+ param+')'\r\n                        concat( name );\r\n                    };\r\n                }\r\n                // 转义变量\r\n                if( escape !== '=' ){\r\n                    value = '_escape_(' + value + ')'\r\n                }\r\n\r\n                // | 自定义方法\r\n                // if( symbol == '|' ){\r\n                //     if( args ){\r\n                //         var split = args.split(':'),\r\n                //             name = split[0].replace(/\\s/g, ''),\r\n                //             param = split[1] || undefined,\r\n                //             code;\r\n\r\n                //         // 执行自定义方法\r\n                //         value = name+'('+ value +','+ param+')'\r\n                //         concat( name );\r\n                //     };\r\n                // }\r\n// console.log( value )                \r\n                return '\\'+'+value+ '+\\'';\r\n            })\r\n            .replace(/[\\r\\t\\n]/g,'');\r\n\r\n        // view = 'var _escape_=$tools._escape_,_each_=$tools._each_,'+ headerCode +'_str = \\'\\';'\r\n        //      +  ' _str+=\\''+ view +'\\'; return new String(_str);';\r\n        // headerCode = ''+ headerCode;\r\n        footerCode = '_str = \\'\\';_str+=\\''+ view +'\\'; return new String(_str);';\r\n\r\n        return function( data ){\r\n            var dataCode = '', code;\r\n\r\n            // 循环数据keyname，声明成变量,方便直接读取\r\n            // _data.name\r\n            tools._each_(data,0,0, function( value, name ){\r\n                dataCode += name + '=_data.' + name+',';\r\n            })\r\n            // 组合代码\r\n            code = headerCode + dataCode + footerCode;\r\n            return (new Function( '_data, $tools', code ))(data, tools);\r\n        }\r\n    }\r\n    // 解析成js语法\r\n    fasTpl._parse = function( tpl ){\r\n        var viewFn;\r\n// console.log( this );\r\n        // 判断是否已经缓存\r\n        if( _cache[ tpl ] ){\r\n            viewFn = _cache[ tpl ];\r\n        }else{\r\n            // 返回解析但未渲染数据的函数\r\n            viewFn = this._compile(tpl);\r\n            _cache[ tpl ] = viewFn;\r\n        }\r\n// console.log( viewFn );\r\n        \r\n        // 生成新的渲染函数\r\n        function render(){\r\n            this._tpl = viewFn;\r\n            this.render = function( data ){\r\n                try{\r\n                    // 渲染数据,返回html\r\n                    return this._tpl( data ).replace(/(^\\s*)|(\\s*$)/g,'');\r\n                    // this._tpl = new Function( '$data, $tools', view );\r\n                    \r\n                }catch (e){\r\n\r\n                    throw( e )\r\n                }\r\n            }\r\n            \r\n        }\r\n\r\n        return new render();\r\n    }\r\n\r\n    typeof define == \"function\" ? define(function() {\r\n        return fasTpl;\r\n    }) : typeof exports != \"undefined\" ? module.exports = fasTpl : window.fasTpl = fasTpl\r\n    // return new Function( code.replace(/[\\r\\t\\n]/g,'') ).apply(options);\r\n})();"],"sourceRoot":"/source/"}